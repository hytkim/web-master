/*project.css*/
/* ======================================== */
/* ======== 1. 메인 페이지 CSS ======== */
/* ======================================== */

#container{
  /* border: 1px solid #ccc; */
  width: 1280px;
  padding: 20px;
  margin: 0 auto; 
}

ul {
  list-style: none;
  margin: 0;
  padding: 0;
}
header > div {
  text-align: center;
  margin: 0px;
  padding: 0px;
}
nav {
  display: flex; /* 자식 요소들을 Flex 아이템으로 만듦 */
  justify-content: space-between; /* 양쪽 끝으로 밀착 정렬! */
  align-items: center; /* 세로 중앙 정렬 (선택 사항) */
  margin: 0 auto; /* 중앙 정렬 (선택 사항) */
  padding: 0px 5px;
  border-bottom: 1px solid #ccc;
  border-top: 1px solid #ccc;
}
.logo-container img {
  height: 128px; /* 원하는 높이로 설정 (예: 40px) */
  width: auto; /* 너비는 높이에 맞춰 자동으로 조절 */
  vertical-align: middle; /* 다른 메뉴들과 세로 정렬을 맞출 때 유용 */
}
header ul li {
  padding: 0px 12px;
}
header nav a {
  text-decoration: none;
  color: #555;
  padding: 24px 12px;
  display: inline-block; /* padding 적용을 위해 */
}
header nav a :hover{
  font-weight: 700;
}
/* 메뉴 그룹 Flexbox 설정 */
.menu-left, .menu-right {
  display: flex; /* 내부 아이템(li, a)들을 가로로 나열 */
  align-items: center; /* 세로 중앙 정렬 */
}

/* 슬래시(/) 스타일 */
.divider {
  color: #ccc;
  padding: 0 5px;
  /* pointer-events: none;를 주면 클릭 이벤트를 무시하게 할 수도 있습니다. */
}

/* aside - main 영역 */
/* Flexbox 컨테이너 설정 (핵심!) */
.card-container {
  display: flex; /* 자식 요소(카드들)를 Flex 아이템으로 만듭니다 */
  justify-content: center; /* ★★★ 가로축 중앙 정렬! 이게 바로 핵심입니다. */
  flex-wrap: wrap; /* 화면이 좁아지면 카드가 아래로 자동으로 줄바꿈됩니다 (반응형 대응) */
  gap: 10px; /* 카드 사이의 간격을 예쁘게 벌려줍니다 */
  padding: 50px 0px; /* 컨테이너 자체의 상하좌우 여백 */
}

/* 개별 카드 스타일링 */
.card {
  width: 300px;
  height: 500px;
  overflow: hidden; /* 이미지가 모서리 밖으로 튀어나가지 않도록 */
  display: flex; /* 카드 내부 요소(이미지, 콘텐츠)를 정렬하기 위해 또 Flex 사용! */
  flex-direction: column; /* 내부 요소를 세로로 쌓습니다 */
}

/* 카드 이미지 */
.card img {
  /* width: 100%; */
  height: 70%;
  object-fit: contain; /* 이미지가 비율을 유지하며 꽉 차도록 설정 */
}

/* 카드 텍스트 콘텐츠 */
/* 텍스트 콘텐츠 영역 (Flexbox로 자식요소들을 제어) */
.card-content {
  flex-grow: 1; /* 남은 공간(30%)을 모두 차지 */
  padding: 15px;
  display: flex;
  flex-direction: column;
  justify-content: space-between; /* 자식 요소들을 위아래로 균등 배분 */
}

/* 상품명 */
.name {
  font-size: 16px;
  margin: 0;
  line-height: 1.4; /* 줄 간격 */
}

/* 가격 섹션 */
.price-section {
  margin-top: 5px; /* 이름과의 간격 */
}

/* 원가 (취소선) */
.original-price {
  font-size: 14px;
  color: #aaa;
  text-decoration: line-through; /* del 태그의 기본 스타일이지만 명시 */
}

/* 할인율 + 최종 가격 라인 */
.final-price-line {
  margin-top: 2px;
}

.discount-rate {
  font-size: 22px;
  font-weight: bold;
  color: #f03f40; /* 쨍한 빨간색 */
  margin-right: 8px;
}

.final-price {
  font-size: 22px;
  font-weight: bold;
  color: #333; /* 기본 검정보다 살짝 연하게 */
}

.tag {
  display: inline-block; /* padding을 주기 위해 */
  padding: 4px 8px;
  font-size: 12px;
  border: 1px solid #00c7ae;
  border-radius: 5px;
  color: #00c7ae;
}


/* ======================================== */
/* ======== 2. 팝업창 관련 CSS ======== */
/* ======================================== */
.popup-wrapper {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.6);
  justify-content: center;
  align-items: center;
  z-index: 1000;
}

.popup-wrapper.active {
  display: flex;
}

.popup {
  background-color: #ffffff;
  padding: 2.5rem;
  border-radius: 10px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  width: 100%;
  max-width: 450px;
  position: relative;
  /* ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼ */
  min-height: 580px;      /* 최소 높이 지정 */
  display: flex;            /* Flexbox 레이아웃 사용 */
  flex-direction: column; /* 자식 요소들을 세로로 정렬 */
  /* ▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲ */
}

.close-btn {
  position: absolute;
  top: 15px;
  right: 20px;
  font-size: 2rem;
  color: #aaa;
  cursor: pointer;
  line-height: 1;
}
.close-btn:hover {
  color: #333;
}

.popup h2 {
  text-align: center;
  color: #1c2b4d;
  margin-top: 0;
}

.popup nav {
  display: flex;
  justify-content: space-around;
  margin-bottom: 2rem;
  border-bottom: 1px solid #dee2e6;
}

.popup nav button {
  padding: 0.8rem 1rem;
  cursor: pointer;
  border: none;
  background: none;
  color: #6c757d;
  font-size: 1rem;
  font-weight: 500;
  transition: color 0.3s, border-bottom 0.3s;
  border-bottom: 3px solid transparent;
}

.popup nav button.active {
  color: #007bff;
  border-bottom: 3px solid #007bff;
}

.popup section {
  display: none;
}

.popup section.active {
  display: block;
}

.popup form {
  display: flex;
  flex-direction: column;
}

.popup label {
  margin-bottom: 1rem;
  color: #495057;
  font-size: 0.9rem;
}

.popup input[type="text"],
.popup input[type="password"],
.popup input[type="date"] {
  width: 100%;
  padding: 0.8rem;
  border: 1px solid #ced4da;
  border-radius: 5px;
  box-sizing: border-box;
  transition: border-color 0.3s, box-shadow 0.3s;
}

.popup input:focus {
  outline: none;
  border-color: #007bff;
  box-shadow: 0 0 5px rgba(0, 123, 255, 0.25);
}

.popup button.submit {
  margin-top: 1rem;
  padding: 0.9rem;
  background-color: #1c2b4d;
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  font-size: 1rem;
  font-weight: bold;
  transition: background-color 0.3s;
}

.popup button.submit:hover {
  background-color: #34495e;
}

.popup .message {
  margin-top: 1rem;
  color: #e74c3c;
  text-align: center;
  font-weight: bold;
}


/* ============================================ */
/* project.css - 추가된 부분만 */
/* ============================================ */

/* 
  ✅ 추가 1: 사용자 정보 표시 영역 (user-wrapper)
  - 기본적으로 display: none으로 숨김
  - 로그인 성공 시 JavaScript에서 .active 클래스를 추가하면 표시됨
*/
.user-wrapper {
  display: none; /* 기본 숨김 */
  align-items: center;
  gap: 15px;
}

/* 
  ✅ 추가 2: 로그인 시 사용자 정보 영역 활성화
  - JavaScript에서 userMenu.classList.add('active') 실행 시 표시
*/
.user-wrapper.active {
  display: flex; /* 로그인 시 표시 */
}

/* 
  ✅ 추가 3: 사용자 정보 박스 스타일
  - 이름과 ID를 담는 컨테이너
  - 둥근 모서리와 배경색으로 버튼처럼 보이게 디자인
*/
.user-info {
  display: flex;
  align-items: center;
  gap: 10px;
  padding: 8px 15px;
  background-color: #f8f9fa;
  border-radius: 20px;
  border: 1px solid #dee2e6;
}

/* 
  ✅ 추가 4: 사용자 이름 스타일
  - "홍길동님" 부분
*/
.user-name {
  font-weight: 600;
  color: #1c2b4d;
}

/* 
  ✅ 추가 5: 사용자 ID 스타일
  - "(user123)" 부분
  - 이름보다 작고 연한 색상으로 표시
*/
.user-id {
  font-size: 0.9em;
  color: #6c757d;
}

/* 
  ✅ 추가 6: 로그아웃 버튼 스타일
  - 빨간색 배경의 버튼
  - hover 시 색상 변경 효과
*/
.logout-btn {
  padding: 8px 16px;
  background-color: #dc3545;
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  font-size: 0.9rem;
  transition: background-color 0.3s;
}

/* 
  ✅ 추가 7: 로그아웃 버튼 hover 효과
*/
.logout-btn:hover {
  background-color: #c82333;
}